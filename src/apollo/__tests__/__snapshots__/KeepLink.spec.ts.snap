// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[` 2`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[` 3`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[` 4`] = `
"fragment level2 on OtherType {
  nice
  to
}

fragment level1 on MyType {
  label
  goesToLevel2 {
    ...level2
  }
}

mutation complexWithNestedFragments {
  complexWithNestedFragments {
    nested {
      ...level1
    }
  }
}
"
`;

exports[` 5`] = `
"mutation complexWithNestedFragments {
  complexWithNestedFragments {
    nested {
      ... on SomeType {
        primaryFunction
      }
    }
  }
}
"
`;

exports[`Default Variables should handle multiple default variables correctly 1`] = `
"query someQuery($otherVar: String = \\"default\\") {
  test {
    some
  }
  otherField(arg: $otherVar) {
    data
  }
}
"
`;

exports[`Default Variables should override default value when variable is explicitly provided 1`] = `
"query someQuery {
  test {
    some
  }
}
"
`;

exports[`Default Variables should use default value when variable is not provided 1`] = `
"query someQuery {
  test {
    some
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[`KeepLink with if Aliases should properly map aliases 1`] = `
"query someQuery {
  aliasForDeeply: deeply {
    nested
  }
}
"
`;

exports[`KeepLink with if Field Arguments should keep variables if they are used elsewhere 1`] = `
"query someQuery($argValue: String!) {
  someOther {
    subFieldOther(someArg: $argValue) {
      subSubFieldOther
    }
  }
}
"
`;

exports[`KeepLink with if Field Arguments should remove query argument variables if exists 1`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
}
"
`;

exports[`KeepLink with if Fragment should work with fragments 1`] = `
"query someQuery {
  deeply {
    nested
  }
}
"
`;

exports[`KeepLink with if and ifFeature Aliases should properly map aliases 1`] = `
"query someQuery {
  aliasForDeeply: deeply {
    nested
  }
}
"
`;

exports[`KeepLink with if and ifFeature Field Arguments should keep variables if they are used elsewhere 1`] = `
"query someQuery($argValue: String!) {
  someOther {
    subFieldOther(someArg: $argValue) {
      subSubFieldOther
    }
  }
}
"
`;

exports[`KeepLink with if and ifFeature Field Arguments should remove argument variables if exists 1`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
}
"
`;

exports[`KeepLink with if and ifFeature Fragment should work with fragments 1`] = `
"query someQuery {
  deeply {
    nested
  }
}
"
`;

exports[`KeepLink with if and ifFeature should keep fields, but remove directives if shouldKeep is true and feature1 is enabled 1`] = `
"query someQuery {
  test {
    some
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[`KeepLink with if and ifFeature should remove directives and fields if shouldKeep is false and feature1 is not enabled 1`] = `
"query someQuery {
  test {
    some
  }
}
"
`;

exports[`KeepLink with if should keep fields, but remove directives if shouldKeep is true 1`] = `
"query someQuery {
  test {
    some
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[`KeepLink with if should remove directives and fields if shouldKeep is false 1`] = `
"query someQuery {
  test {
    some
  }
}
"
`;

exports[`KeepLink with ifFeature Aliases should properly map aliases 1`] = `
"query someQuery {
  aliasForDeeply: deeply {
    nested
  }
}
"
`;

exports[`KeepLink with ifFeature Field Arguments should keep variables if they are used elsewhere 1`] = `
"query someQuery($argValue: String!) {
  someOther {
    subFieldOther(someArg: $argValue) {
      subSubFieldOther
    }
  }
}
"
`;

exports[`KeepLink with ifFeature Field Arguments should remove argument variables if exists 1`] = `
"query someQuery {
  someOther {
    subFieldOther
  }
}
"
`;

exports[`KeepLink with ifFeature Fragment should work with fragments 1`] = `
"query someQuery {
  deeply {
    nested
  }
}
"
`;

exports[`KeepLink with ifFeature should keep fields, but remove directives if feature1 is enabled 1`] = `
"query someQuery {
  test {
    some
  }
  field {
    subFieldA
    subFieldB
  }
}
"
`;

exports[`KeepLink with ifFeature should remove directives and fields if feature1 is not enabled 1`] = `
"query someQuery {
  test {
    some
  }
}
"
`;
